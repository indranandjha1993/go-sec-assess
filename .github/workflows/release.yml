name: Release binaries
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ 'darwin', 'windows', 'linux' ]
        goarch: [ 'amd64' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate with GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.ACTION_GITHUB_TOKEN }}"

      - name: Remove existing release with same tag
        run: |
          if gh release view ${{ github.ref }}; then
            gh release delete ${{ github.ref }} --yes
          fi

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.21'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o release/assessment-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/assessment

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/assessment-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: assessment-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
